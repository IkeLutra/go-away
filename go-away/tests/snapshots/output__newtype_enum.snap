---
source: go-away/tests/output.rs
expression: "go_away::registry_to_output(registry)"

---
type One struct {
	X float64 `json:"x"`
}
type Two struct {
	Y bool `json:"y"`
}
type NewTypeEnum struct {
	*OptionOne
	*OptionTwo
}

func (self *NewTypeEnum) MarshalJSON() ([]byte, error) {
	if self.OptionOne != nil {
		var output map[string]interface{}
		output["k"] = "OptionOne"
		output["c"] = self.OptionOne
		return json.Marshal(output)
	} else 	if self.OptionTwo != nil {
		var output map[string]interface{}
		output["k"] = "OptionTwo"
		output["c"] = self.OptionTwo
		return json.Marshal(output)
	}
}

