---
source: go-away/tests/output.rs
expression: "go_away::registry_to_output(registry)"

---
type OptionOne struct {
	X string `json:"x"`
	Y int `json:"y"`
}
type OptionTwo struct {
	Foo string `json:"foo"`
	Bar int `json:"bar"`
}
type StructEnum struct {
	*OptionOne
	*OptionTwo
}

func (self *StructEnum) MarshalJSON() ([]byte, error) {
	if self.OptionOne != nil {
		var output map[string]interface{}
		output["k"] = "OptionOne"
		output["c"] = self.OptionOne
		return json.Marshal(output)
	} else 	if self.OptionTwo != nil {
		var output map[string]interface{}
		output["k"] = "OptionTwo"
		output["c"] = self.OptionTwo
		return json.Marshal(output)
	}
}

